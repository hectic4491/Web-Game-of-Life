:root {
	--color-white: #FFFFFF;
	--color-background: #C1C1C1;
	--color-background-dark: #78787e;
	--color-start-button: #79a42f;
	--color-start-button-light: #c7da70;
	--color-stop-button: #D16666;
	--color-stop-button-light: #ed9b9b;
	--color-blue: #2C4251;
	--color-dark-blue: #23333e;
	--simulation-columns: 90;
	--simulation-rows: 50;
	--cell-size: 3vh;
}


html, body {
	margin: 0;
	padding: 0;
	height: 100%;
	font-family: 'Courier New', Courier, monospace;
	font-size: 24px;
	color: var(--color-background);
	overflow: hidden;
}


/* mainScreen */


.mainContainer {
	display: flex;
	height: 100%;
	flex-direction: column;
	overflow: hidden;
	transition: all 0.3s allow-discrete;
}

.mainHeader {
	font-weight: 100;
	padding: 0.5rem;
	font-size: 2rem;
	background-color: var(--color-dark-blue);
	border: 0.5rem solid var(--color-blue);
	border-bottom: 0;
	min-height: 1rem;
	
	/* These help to center the text */
	display: flex;
	justify-content: center;
	align-items: center;
}

.mainBody {
	display: flex;
	height: 100%;
	overflow: hidden;
}


/* Control Panel */


.controlPanel {
	flex: 1;
	display: flex;
	flex-direction: column;
	border: 0.5rem solid var(--color-blue);
	border-right: 0;
	background-color: var(--color-dark-blue);
}

.controlSection {
	display: flex;
	flex-direction: column;
	padding: 0.5rem;
}

.controlCategory {
	display: flex;
	align-items: center;
	flex-direction: column;
	border-bottom: 0.5rem solid var(--color-blue);
	margin-bottom: 0.5rem;
}

.buttonRow {
	display: flex;
	justify-content: space-between;
	align-items: center;
	width: 100%;
	padding-bottom: 0.5rem;

	input {
		font-size: 0.5rem;
		background-color: var(--color-background);
		display: flex;
		margin-left: 0.5rem;
		border: 4px solid var(--color-background-dark);
		border-radius: 5px;
		width: 2rem;
		height: 1.25rem;
	}

	input:focus {
		outline: none;
	}
}

.buttonRow.single {
	justify-content: center;
}

.button {
	display: flex;
	justify-content: center;
	align-items: center;
	min-width: 2.5rem;
	min-height: 2.5rem;
	padding: 4px;
	border: 6px solid var(--color-background-dark);
	border-radius: 5px;
	transition: transform 0.3s, scale 1s, rotate 0.3s;
}

.button:hover {
	cursor: pointer;
	transform: translateY(2px);
}

.button:active {
	transform: translateY(8px) scale(0.85);
}
.button.active { /*For use in js*/
	transform: translateY(8px) scale(0.85);
}

.button:disabled {
	transform: scale(0.0);
}

.button.playButton {
	background-color: var(--color-start-button-light);
	border-color: var(--color-start-button);
	width: 100%;
}

.button.playButton:hover {
	background-color: var(--color-start-button);

	.playIcon {
		fill: var(--color-start-button-light);
	}
}

.button.generalButton {
	background-color: var(--color-background);
	border-color: var(--color-background-dark);
}

.button.generalButton:hover {
	background-color: var(--color-background-dark);

	.stepIcon,
	.resetIcon,
	.jumpIcon {
		fill: var(--color-background);
	}

	.newIcon {
		polygon {
			fill: var(--color-background);
		}
		path {
			stroke: var(--color-background);
		}
	}

	.loadIcon {
		polygon {
			fill: var(--color-background);
		}
		path {
			stroke: var(--color-background);
		}
	}

	.drawIcon {
		path {
			stroke: var(--color-background);
		}
	}
}


.simInfo { 
	color: var(--color-background);
	font-size: 0.75rem;
	margin: 0;
}


/* simulation window */


.simulationWindow {
	flex: 10;
	display: flex;
	align-items: center;
	justify-content: center;
	text-align: center;

	border: 0.5rem solid var(--color-blue);
	overflow: hidden;
	background-color: var(--color-blue);
	box-sizing: border-box;
}

.gridFrame {
	position: relative;
	width: 100%;
	height: 100%;
	background: rgba(0,0,0,0);
	overflow: hidden;
	box-sizing: border-box;
}

.grid {
	position: relative;
	top: 0;
	left: 0;
	width: calc(var(--simulation-columns) * var(--cell-size));
	height: calc(var(--simulation-rows) * var(--cell-size));
	border: calc(var(--cell-size) * 0.9) solid var(--color-dark-blue);
	padding:calc(var(--cell-size) * 0.1);
	/*This is for the Simulation*/
	display: grid;
	grid-template-rows: repeat(var(--simulation-rows), var(--cell-size));
	grid-template-columns: repeat(var(--simulation-columns), var(--cell-size));
	/*This is to center the gridCells*/
	justify-content: start;
	align-items: start;
	justify-items: start;
	align-content: start;
}


.arrowKeyContainer {
	position: fixed;
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	bottom: 0;
	right: 10%;
	width: 14rem;
	height: 8rem;
	background-color: rgba(0,0,0,0);
	border: 10px;
	z-index: 1;
}

.arrowKeyRow {
	display: flex;
	justify-content: center;
	align-items: center;

	svg {
		width: 3rem;
		height: 3rem;
		
		polygon {
		fill: rgba(216, 216, 216, 0.422);
		}

		path {
			stroke:rgba(175, 175, 175, 0.507);
			fill: none;
		}
	}
}

.arrowKeyRow.upper {
	margin-bottom: 0.25rem;
}

.arrowKeyRow.lower {
	gap: 0.25rem;
}

.arrowKeyContainerHandle {
	position: fixed;
	display: flex;
	bottom: 8rem;
	right: 10%;
	width: 2rem;
	height: 2rem;
	background-color: rgba(0, 119, 255, 0.974);
	border: 10px;
	z-index: 1;
}


/* Cell element classes*/


.cell {
	background-color: var(--color-dark-blue);
	position: relative;
	width: var(--cell-size);
	height: var(--cell-size);
	border: calc(var(--cell-size) * 0.1) solid var(--color-blue);
	transition: transform 0.1s ease-in-out;
	transform-origin: center;
	box-sizing: border-box;
	transform: scale(1);
}
/* 
.cellSpawn {

} */

.cellAlive {
	transition: background-color 0.15s ease;
	background-color: var(--color-start-button);
}

.cell:hover {
	border: calc(var(--cell-size) * 0.2) solid var(--color-white);
	transform: scale(0.8);
}


/* selectScreen */


.menu {
	max-width: 100vw;
	max-height: 100vh;
	height: 100%;
	width: 100%;
	margin: 0;
	border: none;
	background-color: rgb(98, 183, 209);
	/*transition*/
	opacity: 0;
	transition: all 0.3s allow-discrete;
}

.selectMenuBody {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
}

.typeContainer{
	background-color: var(--color-start-button);
	border: 3px solid var(--color-blue);
}

.typeButton {
	font-size: 1rem;
	background-color: var(--color-white);
	padding: 0.5rem;
	margin: 0.5rem;
	cursor: pointer;
	border: 3px solid var(--color-blue);
	border-radius: 5px;
}

.typeButton:active {
	background-color: var(--color-background);
}

.menu[open] {
	/*transition*/
	opacity: 1;
}

/*needed for the transition*/
@starting-style {
	.menu[open] {
		opacity: 0;
	}
}


/*SVG Utility classes*/


.squareSVG {
	width: 1rem;
	height: 1rem;
}

.longSVG {
	width: 2rem;
	height: 1rem;
}


/* Default Style SVGs */


.playIcon {
	fill: var(--color-start-button);
}

.stepIcon,
.resetIcon,
.jumpIcon {
	fill: var(--color-background-dark);
}

.newIcon {
	polygon {
		fill: var(--color-background-dark);
	}
	path {
		stroke: var(--color-background-dark);
		stroke-width: 6;
		fill: none;
	}
}

.loadIcon {
	polygon {
		fill: var(--color-background-dark);
	}
	path {
		stroke: var(--color-background-dark);
		stroke-width: 1;
		fill: none;
	}
}

.drawIcon {
	path {
		stroke: var(--color-background-dark);
		stroke-width: 1;
		fill: none;
	}
	.thickPath {
		stroke-width: 2;
	}
}