:root {
	--color-white: #FFFFFF;
	--color-background: #C1C1C1;
	--color-background-dark: #78787e;
	--color-start-button: #79a42f;
	--color-start-button-light: #c7da70;
	--color-start-button-super-light: rgba(229,241,179, 0.3);
	--color-start-button-super-light-bright: rgba(229,241,179, 0.6);
	--color-stop-button: #D16666;
	--color-stop-button-light: #ed9b9b;
	--color-blue: #2C4251;
	--color-dark-blue: #23333e;
	--simulation-columns: 90;
	--simulation-rows: 50;
	--cell-size: 3vh;
}


@font-face {
	font-family: 'TitleFont';
	src: url('./fonts/Teko-Medium.ttf') format('truetype');
}


@font-face {
	font-family: 'BodyFont';
	src: url('./fonts/Viga-Regular.ttf') format('truetype');
}


/* Media Queries */
html, body {
    font-size: 24px; /* Default size */
}

/* Medium screens (tablets) */
@media screen and (max-width: 1024px) {
    html, body {
        font-size: 20px;
    }
}

/* Small screens (mobile) */
@media screen and (max-width: 768px) {
    html, body {
        font-size: 16px;
    }
}

/* Extra small screens */
@media screen and (max-width: 480px) {
    html, body {
        font-size: 12px;
    }
}


html, body {
	margin: 0;
	padding: 0;
	height: 100%;
	/* font-family: 'Courier New', Courier, monospace; */
	font-family: 'BodyFont';
	color: var(--color-background);
	overflow: hidden;
}


/* Main Screen */


.mainContainer {
	display: flex;
	height: 100%;
	flex-direction: column;
	overflow: hidden;
	transition: all 0.3s allow-discrete;
}


/* Header Section */


.mainHeader {
	padding: 0.5rem;
	background-color: var(--color-dark-blue);
	border: 0.5rem solid var(--color-blue);
	border-bottom: 0;
	min-height: 1rem;
	
	/* These help to center the text */
	display: flex;
	justify-content: center;
	align-items: center;
}

.headerRow {
	display: flex;
	padding: 0.5rem;
	justify-content: space-between;
	align-items: center;
	width: 100%;
}

.gameTitle {
	margin: 0;
	padding-top: 0.3rem;
	padding-left: 0.3rem;
	font-family: 'TitleFont';
	font-weight: 100;
	font-size: 3rem;
	letter-spacing: normal;
}

.badgeContainer {
	display: flex;
	justify-content: center;
	align-items: center;
	gap: 2rem;
	padding-right: 0.5rem;
}

.button.badgeButton {
	color: rgba(0,0,0,0);
	background-color: rgba(0,0,0,0);
	border: 0;
	padding: 0;
	min-width: 1rem;
	min-height: 1rem;
	transition: transform 0.2s, filter 0.15s;

	svg {
		fill: var(--color-blue);
		width: 2.5rem;
		height: 2.5rem;
	}
}

.button.badgeButton:hover {
	cursor: pointer;
	filter: brightness(1.5) drop-shadow(0 0 12px var(--color-start-button-super-light));
	transform: translateY(-4px);

	svg {
		fill: var(--color-start-button)
	}
}

.button.badgeButton:active {
	filter: brightness(3) drop-shadow(0 0 16px var(--color-start-button-super-light-bright));
	transform: translateY(6px) scale(0.85);
}

.mainBody {
	display: flex;
	height: 100%;
	overflow: hidden;
}


/* Control Section */


.controlPanel {
	flex: 1;
	display: flex;
	flex-direction: column;
	justify-content: space-between;
	border: 0.5rem solid var(--color-blue);
	border-right: 0;
	background-color: var(--color-dark-blue);
}

.controlSection {
	display: flex;
	flex-direction: column;
	padding: 0.5rem;
}

.overlapCategory {
	position: absolute;
	display: flex;
	align-items: center;
	flex-direction: column;
}

.controlCategory {
	display: flex;
	align-items: center;
	flex-direction: column;
	border-bottom: 0.5rem solid var(--color-blue);
	margin-bottom: 0.5rem;
}

.buttonRow {
	display: flex;
	justify-content: space-between;
	align-items: center;
	width: 100%;
	padding-bottom: 0.5rem;

	input {
		font-size: 0.6rem;
		background-color: var(--color-background);
		display: flex;
		margin-left: 0.5rem;
		border: 4px solid var(--color-background-dark);
		border-radius: 5px;
		width: 2rem;
		height: 1.25rem;
		padding-left: 1ch;
	}

	input:focus {
		outline: none;
	}
}

.buttonRow.single {
	justify-content: center;
}

.button {
	display: flex;
	justify-content: center;
	align-items: center;
	min-width: 2.5rem;
	min-height: 2.5rem;
	padding: 4px;
	border: 6px solid var(--color-background-dark);
	border-radius: 5px;
	transition: transform 0.3s, scale 1s;
}

.button:hover {
	cursor: pointer;
	transform: translateY(2px);
}

.button:active,
.button.active {
	transform: translateY(8px) scale(0.85);
}

.button:disabled {
	transform: scale(0.0);
}

.emptyGraphic {
	display: none;
	width: 2.5rem;
	height: 2.5rem;
	padding: 4px;
	background-color: var(--color-start-button);
	border: 6px solid var(--color-blue);
	border-radius: 5px;
}

.emptyGraphic.visible {
	display: flex;
}

.button.playButton {
	background-color: var(--color-start-button-light);
	border-color: var(--color-start-button);
	width: 100%;
}

.button.playButton:hover {
	background-color: var(--color-start-button);

	.playIcon {
		fill: var(--color-start-button-light);
	}
}

.button.pauseButton {
	background-color: var(--color-stop-button-light);
	border-color: var(--color-stop-button);
	width: 100%;
}

.button.pauseButton:hover {
	background-color: var(--color-stop-button);

	.playIcon {
		fill: var(--color-stop-button-light);
	}
}

.button.generalButton {
	background-color: var(--color-background);
	border-color: var(--color-background-dark);
}

.button.generalButton:hover {
	background-color: var(--color-background-dark);

	.stepIcon,
	.resetIcon,
	.jumpIcon {
		fill: var(--color-background);
	}

	.clearIcon,
	.newIcon {
		polygon {
			fill: var(--color-background);
		}
		path {
			stroke: var(--color-background);
		}
	}

	.loadIcon {
		polygon {
			fill: var(--color-background);
		}
		path {
			stroke: var(--color-background);
		}
	}

	.drawIcon {
		path {
			stroke: var(--color-background);
		}
	}
}


.simInfo { 
	color: var(--color-background);
	font-size: 0.75rem;
	margin: 0;
}


/* Footer Section */


.controlSection.footerSection {
	display: flex;
	padding-bottom: 0;
}


.footerButtonContainer {
	display: flex;
	justify-content: space-between;
	align-items: center;
	gap: 1rem;
	margin-bottom: 0.5rem;
}

.button.footerButton {
	color: rgba(0,0,0,0);
	background-color: rgba(0,0,0,0);
	border: 0;
	padding: 0;
	min-width: 0.5rem;
	min-height: 0.5rem;
	transition: transform 0.2s, filter 0.15s;

	svg {
		fill: var(--color-blue);
		width: 1.25rem;
		height: 1.25rem;
	}
}

.button.footerButton:hover {
	cursor: pointer;
	filter: brightness(1.3) drop-shadow(0 0 10px var(--color-start-button-super-light));
	transform: translateY(-2px);

	svg {
		fill: var(--color-start-button)
	}
}

.button.footerButton:active {
	filter: brightness(3) drop-shadow(0 0 14px var(--color-start-button-super-light-bright));
	transform: translateY(0px) scale(0.85);
}

.copyrightFooter {
	display: flex;
	justify-content: center;
	align-items: end;
}

.copyright {
	font-size: 0.7rem;
	letter-spacing: 1px;
	margin: 0;
	padding-bottom: 4px;
}


/* Simulation Window */


.simulationWindow {
	flex: 9;
	display: flex;
	align-items: center;
	justify-content: center;
	text-align: center;

	border: 0.5rem solid var(--color-blue);
	overflow: hidden;
	background-color: var(--color-blue);
	box-sizing: border-box;
}

.gridFrame {
	position: relative;
	width: 100%;
	height: 100%;
	background: rgba(0,0,0,0);
	overflow: hidden;
	box-sizing: border-box;
}


/* Cell element classes*/


.cell {
	background-color: var(--color-dark-blue);
	position: relative;
	width: var(--cell-size);
	height: var(--cell-size);

	border: calc(var(--cell-size) * 0.1) solid var(--color-blue);

	transform-origin: center;
	box-sizing: border-box;
}

.cell.cellAlive {
	background-color: var(--color-start-button);
}


.cell:hover {
	border: calc(var(--cell-size) * 0.2) solid var(--color-start-button-super-light-bright);
	background-color: var(--color-start-button-light);
	box-shadow: 0px 0px 20px rgba(255, 253, 181, 0.80);
	transform: scale(0.8);
	z-index: 1;
}


/* Arrow Controls */


.grid {
	position: relative;
	top: 0;
	left: 0;
	width: calc(var(--simulation-columns) * var(--cell-size));
	height: calc(var(--simulation-rows) * var(--cell-size));
	border: calc(var(--cell-size) * 0.9) solid var(--color-dark-blue);
	padding:calc(var(--cell-size) * 0.1);
	/*This is for the Simulation*/
	display: grid;
	grid-template-rows: repeat(var(--simulation-rows), var(--cell-size));
	grid-template-columns: repeat(var(--simulation-columns), var(--cell-size));
	/*This is to center the gridCells*/
	justify-content: start;
	align-items: start;
	justify-items: start;
	align-content: start;
}


.arrowKeyContainer {
	position: fixed;
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	bottom: 6px;
	right: 10%;
	width: 14rem;
	height: 8rem;
	background-color: rgba(0,0,0,0);
	z-index: 1;
}

.arrowKeyRow {
	display: flex;
	justify-content: center;
	align-items: center;
}

.arrowKeyRow.upper {
	margin-bottom: 0.25rem;
}

.arrowKeyRow.lower {
	gap: 0.25rem;
}

.button.arrow {
	border-radius: 6px;
	border: none;
	background-color: rgba(63, 75, 82, 0.456);
	padding: 8px;
	transition: transform 0.2s, filter 0.15s;

	svg {
		width: 2.5rem;
		height: 2.5rem;
		
		polygon {
		fill: rgba(216, 216, 216, 0.3);
		}

		path {
			stroke:rgba(216, 216, 216, 0.3);
		}
	}
}

.button.arrow:hover {
	transition: transform 0.2s, background-color 0.15s, filter 0.15s;

	background-color: rgba(110, 126, 125, 0.456);

	filter: brightness(1.3) drop-shadow(0 0 10px var(--color-start-button-super-light));

	svg {
		polygon {
		fill: rgba(216, 216, 216, 0.55);
		}

		path {
			stroke:rgba(216, 216, 216, 0.55);
		}
	}
}

.button.arrow:active,
.button.arrow.active {
	transition: transform 0.2s, background-color 0.15s, filter 0.15s;

	filter: brightness(1.6) drop-shadow(0 0 14px var(--color-start-button-super-light));

	svg {
		polygon {
		fill: var(--color-start-button-light);
		}

		path {
			stroke: var(--color-start-button-light);
		}
	}
}




.arrowKeyContainerHandle {
	position: fixed;
	display: flex;
	bottom: 8rem;
	right: 10%;
	width: 2rem;
	height: 2rem;
	background-color: rgba(0, 119, 255, 0.974);
	border: 10px;
	z-index: 1;
	opacity: 0; /*For now*/
}


/* Select Screen */


.menu {
	display: flex;
	flex-direction: column;
	padding: 0.5rem;
	font-size: 2rem;
	background-color: var(--color-dark-blue);
	border: 0.5rem solid var(--color-blue);
	border-radius: 16px;

	/*transition*/
	opacity: 0;
	transition: all 0.3s allow-discrete;
}

.menu[open] {
	/*transition*/
	opacity: 1;
}

@starting-style { /*needed for the transition*/
	.menu[open] {
		opacity: 0;
	}
}

.menu::backdrop {
	background-color: rgba(0,0,0,0);
	backdrop-filter: grayscale(0) blur(0) brightness(1);
	transition: all 0.3s allow-discrete;
}

.menu[open]::backdrop {
	background-color: rgba(0, 0, 0, 0.35);
	backdrop-filter: grayscale(30%) blur(3px) brightness(1.3);
}

@starting-style { /*needed for the transition*/
	.menu[open]::backdrop {
		background-color: rgba(0,0,0,0);
		backdrop-filter: grayscale(0) blur(0) brightness(1);
	}
}


.selectMenuHeader {
	display: flex;
	flex-shrink: 0;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	padding-bottom: 0.5rem;
	margin-bottom: 0.5rem;
	border: solid var(--color-blue);
	border-width: 0rem 0rem 0.25rem 0rem;

	.headerRow {
		display: flex;
		flex-direction: row;
		justify-content:space-between;
		align-items: center;
	
		.backButton {
			border-radius: 100%;
			border-width: 0.25rem;
			border-color: var(--color-blue);
			background-color: var(--color-dark-blue);

			svg {
				width: 1.5rem;
				height: 1.5rem;

				path {
					stroke: var(--color-blue);
					stroke-width: 5px;
				}
			}
		}

		.titleContainer {
			display: flex;
			justify-content: center;
			width: 100%;
			padding-right: 75px; /* This is an offset equal to the width of the
			button, so that the title will be centered. */


			.selectMenuTitle {
				margin: 0;
				padding: 0 1rem 0 1rem;
				color: var(--color-background);
				font-size: 1.5rem;
				letter-spacing: 2px;
			}
		}
	}
}

.button.backButton {
	transition: transform 0.2s, filter 0.15s;
}

.button.backButton:hover {
	transform: translateX(-4px);
	background-color: var(--color-blue);

	svg {
		background-color: var(--color-blue);
		path {
			stroke: var(--color-dark-blue);
			stroke-width: 5;
		}
	}
}

.button.backButton:active {
	filter: brightness(1.3) drop-shadow(0 0 8px var(--color-start-button-super-light-bright));
	transform: translateX(0px);
}

.selectMenuBody {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: start;
	overflow-y: scroll;
}


.patternRow {
	display: flex;
	flex-direction: row;
	justify-content: start;
	font-size: 1rem;
	color: var(--color-background);

	border: solid var(--color-blue);
	border-width: 0 0 3px 0;

	padding-bottom: 0.5rem;
	margin-bottom: 0.5rem;

	transition: filter 0.3s;
}

.patternRow:hover {
	filter: brightness(1.4);

	.rowButtonBox {
		.rowButton {
			svg {
				visibility: visible;
			}
		}
	}
}


.rowButtonBox {
	width: 4rem;
	height: 4rem;

	.button.rowButton {
		width: 4rem;
		height: 4rem;
		border-color: var(--color-blue);
		background-color: var(--color-dark-blue);

		svg {
			visibility: hidden;

			polygon {
				fill: var(--color-blue);
			}
			path {
				stroke: var(--color-blue);
			}
		}
	}
}

.button.rowButton {
	transition: all 0.4s;
}

.button.rowButton:hover {
	transform: translateY(8px);
	filter: brightness(1.6) drop-shadow(0 0 8px rgba(128, 185, 255, 0.244));
}

.button.rowButton:active {
	transition: all 0.2s;
	transform: scale(0.8) translateY(6px);
}

.rowInfo {
	display: flex;
	flex-direction: column;
	padding-left: 0.5rem;
	padding-right: 0.5rem;
}

	.rowName {
		max-width: 40ch;
		padding-bottom: 0.5rem;

		.patternName {
			font-size: 1rem;
			letter-spacing: 2px;
			white-space: pre-line;
			margin: 0;
		}
	}

	.rowDescription {
		max-width: 40ch;

		.patternDescription {
			font-size: 0.8rem;
			white-space: pre-line;
			margin: 0;
		}
	}

.typeRow {
	display: flex;
	justify-content: center;
	width: 100%;

	margin: 0 0 0.5rem 0;
	padding-bottom: 0.5rem;

	border: solid var(--color-blue);
	border-width: 0 0 3px 0;

	.typeName {
		margin: 0;
		font-size: 1rem;
		letter-spacing: 2px;
		color: var(--color-background);
	}
}


/* SVG Utility classes */


.squareSVG {
	width: 1rem;
	height: 1rem;
}

.mediumSquareSVG {
	width: 1.25rem;
	height: 1.25rem
}

.bigSquareSVG {
	width: 1.5rem;
	height: 1.5rem;
}

.bigbigSquareSVG {
	width: 1.6rem;
	height: 1.6rem;
}

.longSVG {
	width: 2rem;
	height: 1rem;
}


/* Default Style SVGs */


.playIcon {
	fill: var(--color-start-button);

	.paused {
		fill: var(--color-stop-button);
	}
}

.playIcon.paused {
		fill: var(--color-stop-button);
}

.stepIcon,
.resetIcon,
.jumpIcon {
	fill: var(--color-background-dark);
}

.clearIcon,
.newIcon {
	polygon {
		fill: var(--color-background-dark);
	}
	path {
		stroke: var(--color-background-dark);
		stroke-width: 6;
		fill: none;
	}
}

.loadIcon {
	polygon {
		fill: var(--color-background-dark);
	}
	path {
		stroke: var(--color-background-dark);
		stroke-width: 1;
		fill: none;
	}
}

.drawIcon {
	path {
		stroke: var(--color-background-dark);
		stroke-width: 1;
		fill: none;
	}
	.thickPath {
		stroke-width: 2;
	}
}


/* Disable input type="number" arrow spinners */


	/* Chrome, Safari, Edge, Opera */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}


/* Media Queries */
@media screen and (max-width: 1200px) {
	.responsive-header {
			font-size: 2.5rem;
	}
}

@media screen and (max-width: 992px) {
	.responsive-header {
			font-size: 2rem;
	}
}

@media screen and (max-width: 768px) {
	.responsive-header {
			font-size: 1.5rem;
	}
}

@media screen and (max-width: 576px) {
	.responsive-header {
			font-size: 1.2rem;
	}
}